<ResourceDictionary x:Class="NSRSoft.Common.WindowStyle.WindowCustomBorderStyle"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
    <ResourceDictionary.MergedDictionaries>
    </ResourceDictionary.MergedDictionaries>
    <CornerRadius x:Key="WindowCorderRadius">10,10,5,5</CornerRadius>
    <CornerRadius x:Key="TitleCorderRadius">10,10,0,0</CornerRadius>
    <Style x:Key="TitleBarRadialButton" TargetType="{x:Type Button}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Setter Property="FrameworkElement.MinHeight" Value="13"/>
        <Setter Property="FrameworkElement.MinWidth" Value="13"/>
        <Setter Property="UIElement.Opacity" Value="0.9"/>
    </Style>
    <Storyboard x:Key="OnMouseEnter1">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExtrasGrid"
                                   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="-35"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="OnMouseLeave1">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExtrasGrid"
                                   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-35"/>
            <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Style x:Key="CloseRadialButton" TargetType="{x:Type Button}"
         BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ButtonRoot">
                        <UIElement.Effect>
                            <DropShadowEffect ShadowDepth="0" Color="Red" BlurRadius="0"/>
                        </UIElement.Effect>
                        <Image x:Name="Image" Source="/Assets/normal_close.png" HorizontalAlignment="Center"
                   VerticalAlignment="Center" Width="22" Height="22"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Image.Source" Value="/Assets/highlighted_close.png"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonRoot"
                                   Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" To="15"
                                   Duration="0:0:0.3"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonRoot"
                                   Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" To="0"
                                   Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.9" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MinimizeRadialButton" TargetType="{x:Type Button}"
         BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image x:Name="Image" Source="/Assets/normal_minimize.png" HorizontalAlignment="Center"
                   VerticalAlignment="Center" Width="20" Height="20"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Image.Source" Value="/Assets/highlighted_minimize.png"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MaximizeRadialButton" TargetType="{x:Type Button}"
         BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image x:Name="Image" Source="/Assets/normal_maximize.png" HorizontalAlignment="Center"
                   VerticalAlignment="Center" Width="20" Height="20"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Image.Source" Value="/Assets/highlighted_maximize.png"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ResoreRadialButton" TargetType="{x:Type Button}"
         BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image x:Name="Image" Source="/Assets/normal_ReStore.png" HorizontalAlignment="Center"
                   VerticalAlignment="Center" Width="20" Height="20"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Image.Source" Value="/Assets/normal_ReStore.png"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WindowBorder" TargetType="{x:Type Border}">
        <Setter Property="Border.CornerRadius" Value="{StaticResource WindowCorderRadius}"/>
        <Setter Property="Border.Background" Value="#ABABAB"/>
        <Setter Property="Border.BorderBrush" Value="DimGray"/>
        <Setter Property="Border.BorderThickness" Value="1"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}"
                   Value="Maximized">
                <Setter Property="Border.CornerRadius" Value="0"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TitleBarBackgroundBorder" TargetType="{x:Type Border}">
        <Setter Property="FrameworkElement.Height" Value="30"/>
        <Setter Property="Border.CornerRadius" Value="{StaticResource TitleCorderRadius}"/>
        <Setter Property="Border.Background" Value="{DynamicResource TitleBarBackgroundBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}"
                   Value="Maximized">
                <Setter Property="Border.CornerRadius" Value="0"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WindowRoot" TargetType="{x:Type Grid}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}"
                   Value="Maximized">
                <Setter Property="FrameworkElement.Margin" Value="{DynamicResource WindowRootMargin}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RectBorderStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Shape.Fill" Value="Transparent"/>
    </Style>
    <Style x:Key="HelpButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.Background" Value="#373737"/>
        <Setter Property="Control.Foreground" Value="White"/>
        <Setter Property="Control.FontSize" Value="15"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="Red">
                        <Grid>
                            <Path x:Name="PathIcon" Width="15" Height="22" Stretch="Fill" Fill="White" HorizontalAlignment="Left"
                    Margin="10,0,0,0"
                    Data="F1 M 30.0833,22.1667 L 50.6665,37.6043 50.6665,38.7918 30.0833,53.8333 30.0833,22.1667 Z"/>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding ContentControl.Content}"
                                HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,12,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter Property="Control.Background" Value="#E59400"/>
                            <Setter Property="Control.Foreground" Value="White"/>
                            <Setter TargetName="PathIcon" Property="Shape.Fill" Value="White"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter Property="Control.Background" Value="OrangeRed"/>
                            <Setter Property="Control.Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
        <FrameworkTemplate.Resources>
            <GridLength x:Key="BorderWidth">7</GridLength>
        </FrameworkTemplate.Resources>
        <Grid x:Name="WindowRoot" Style="{DynamicResource WindowRoot}">
            <Border x:Name="WindowFrame" Style="{DynamicResource WindowBorder}">
                <Grid x:Name="WindowLayout">
                    <Grid Margin="0" VerticalAlignment="Top">
                        <Border Style="{DynamicResource TitleBarBackgroundBorder}"/>
                        <Image x:Name="IconApp" Margin="10, 0, 0, 0" HorizontalAlignment="Left"
                   Source="{TemplateBinding Window.Icon}"/>
                        <TextBlock x:Name="tbCmpName" Foreground="{DynamicResource WindowTitleTextBrush}"
                       Text="{TemplateBinding Window.Title}" HorizontalAlignment="Left" VerticalAlignment="Center"
                       FontWeight="UltraBold" Margin="40,0,0,0" FontSize="18"/>
                        <StackPanel Margin="0,5" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                            <TextBlock x:Name="tbTranyear" Width="120" Margin="0,0,25,0"/>
                            <ComboBox x:Name="cmpDetail" DisplayMemberPath="Value" IsEnabled="false" SelectedValuePath="Id"
                        HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,15,0"/>
                            <Button Name="Helpscreen" Visibility="Collapsed" Style="{StaticResource HelpButtonStyle}"
                      VerticalAlignment="Top" Width="80" Height="24" Margin="0,0,15,0">
                                <ContentControl.Content>
                                    <StackPanel HorizontalAlignment="Right">
                                        <TextBlock Text="HELP" FontWeight="Bold" HorizontalAlignment="Right"/>
                                    </StackPanel>
                                </ContentControl.Content>
                            </Button>
                            <Image Name="ProductInfo" ToolTip="Search Product Detail [F1]" Height="20" Width="20" Stretch="Fill"
                     Source="/Assets/product.png" Margin="0,0,15,0"/>
                            <Image Name="CustomerInfo" ToolTip="Search Customer Detail" Height="20" Width="20" Stretch="Fill"
                     Source="/Assets/Customer.png" Margin="0,0,15,0"/>
                            <Image Name="changeyear" ToolTip="Open Another Financial Year" Visibility="Collapsed" Height="20"
                     Width="20" Stretch="Fill" Source="/Assets/changeyear.png"
                     Margin="0,0,15,0"/>
                            <Image Name="ChageCmp" ToolTip="Open Another Company" Visibility="Collapsed" Height="20" Width="20"
                     Stretch="Fill" Source="/Assets/Changecmp.png" Margin="0,0,15,0"/>
                            <Image Name="Setting" ToolTip="Settings" Height="20" Width="20" Stretch="Fill"
                     Source="/Assets/Setting.png" Margin="0,0,15,0"/>
                            <Button Style="{StaticResource MinimizeRadialButton}" HorizontalAlignment="Right"
                      VerticalAlignment="Center" Margin="0,0,5,0" ToolTip="Minimize"/>
                            <Button x:Name="BtnMax" Style="{StaticResource ResoreRadialButton}" HorizontalAlignment="Right"
                      VerticalAlignment="Center" Margin="0,0,5,0" ToolTip="Restore Down"/>
                            <Button Style="{StaticResource CloseRadialButton}" HorizontalAlignment="Right" VerticalAlignment="Center"
                      Margin="0,0,10,0" ToolTip="Close Varthagamsoft"/>
                        </StackPanel>
                    </Grid>
                    <Border x:Name="WindowContent" Margin="0,30,0,0">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                    <Rectangle x:Name="leftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" HorizontalAlignment="Left"/>
                    <Rectangle x:Name="rightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7"
                     HorizontalAlignment="Right"/>
                    <Rectangle x:Name="topSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7" VerticalAlignment="Top"/>
                    <Rectangle x:Name="bottomSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7"
                     VerticalAlignment="Bottom"/>
                    <Rectangle Name="topLeftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7"
                     HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Rectangle Name="bottomRightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7"
                     HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                    <Rectangle Name="topRightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7"
                     HorizontalAlignment="Right" VerticalAlignment="Top"/>
                    <Rectangle Name="bottomLeftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7"
                     HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="SkinButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Fill="#C3E1F9" Stroke="{x:Null}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsFocused" Value="true"/>
                        <Trigger Property="Button.IsDefaulted" Value="true"/>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Shape.Fill" Value="#A8D1F7"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                        <Trigger Property="UIElement.IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GreenButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Fill="#b3eab3" Stroke="{x:Null}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsFocused" Value="true"/>
                        <Trigger Property="Button.IsDefaulted" Value="true"/>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Shape.Fill" Value="#3FA03F"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                        <Trigger Property="UIElement.IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OrangeButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Fill="#FFDCB6" Stroke="{x:Null}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsFocused" Value="true"/>
                        <Trigger Property="Button.IsDefaulted" Value="true"/>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Shape.Fill" Value="#BC6200"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                        <Trigger Property="UIElement.IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="pinkButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Fill="#e9c9c9" Stroke="{x:Null}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsFocused" Value="true"/>
                        <Trigger Property="Button.IsDefaulted" Value="true"/>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Shape.Fill" Value="#E38686"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                        <Trigger Property="UIElement.IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="whiteButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Fill="#FFE87A" Stroke="{x:Null}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsFocused" Value="true"/>
                        <Trigger Property="Button.IsDefaulted" Value="true"/>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Shape.Fill" Value="#DEBF2D"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                        <Trigger Property="UIElement.IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GrayButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Fill="#acaaaa" Stroke="{x:Null}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsFocused" Value="true"/>
                        <Trigger Property="Button.IsDefaulted" Value="true"/>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Shape.Fill" Value="#817f7f"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                        <Trigger Property="UIElement.IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SkinWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Window.WindowStyle" Value="None"/>
        <Setter Property="Window.AllowsTransparency" Value="true"/>
        <Setter Property="Window.ResizeMode" Value="CanResize"/>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="FrameworkElement.MinHeight" Value="150"/>
        <Setter Property="FrameworkElement.MinWidth" Value="250"/>
        <Setter Property="UIElement.Opacity" Value="1.0"/>
        <Setter Property="Control.FontFamily" Value="Segoe360"/>
        <Setter Property="Control.FontSize" Value="14"/>
        <Setter Property="Control.FontWeight" Value="Bold"/>
        <Setter Property="Control.Template" Value="{StaticResource WindowTemplate}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState}" Value="Maximized"/>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="WindowDialogTemplate" TargetType="{x:Type Window}">
        <FrameworkTemplate.Resources>
            <GridLength x:Key="BorderWidth">7</GridLength>
        </FrameworkTemplate.Resources>
        <Grid x:Name="WindowRoot" Style="{DynamicResource WindowRoot}">
            <Border x:Name="WindowFrame" Style="{DynamicResource WindowBorder}">
                <Grid x:Name="WindowLayout">
                    <Border x:Name="WindowContent" Margin="1">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                    <Rectangle x:Name="leftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" HorizontalAlignment="Left"/>
                    <Rectangle x:Name="rightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7"
                     HorizontalAlignment="Right"/>
                    <Rectangle x:Name="topSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7" VerticalAlignment="Top"/>
                    <Rectangle x:Name="bottomSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7"
                     VerticalAlignment="Bottom"/>
                    <Rectangle Name="topLeftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7"
                     HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Rectangle Name="bottomRightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7"
                     HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                    <Rectangle Name="topRightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7"
                     HorizontalAlignment="Right" VerticalAlignment="Top"/>
                    <Rectangle Name="bottomLeftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7"
                     HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="SkinWindowDialogStyle" TargetType="{x:Type Window}">
        <Setter Property="Window.WindowStyle" Value="None"/>
        <Setter Property="Window.AllowsTransparency" Value="true"/>
        <Setter Property="Window.ResizeMode" Value="CanResize"/>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="FrameworkElement.MinHeight" Value="150"/>
        <Setter Property="FrameworkElement.MinWidth" Value="250"/>
        <Setter Property="UIElement.Opacity" Value="1.0"/>
        <Setter Property="Control.FontFamily" Value="Segoe360"/>
        <Setter Property="Control.FontSize" Value="12"/>
        <Setter Property="Control.FontWeight" Value="Normal"/>
        <Setter Property="Control.Template" Value="{StaticResource WindowDialogTemplate}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState}" Value="Maximized"/>
        </Style.Triggers>
    </Style>
    <Style x:Key="MainWindow" TargetType="{x:Type Window}">
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Control.FontFamily" Value="Segoe360"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border x:Name="MainBorder" BorderBrush="{DynamicResource MainWindowBorderBrush}" BorderThickness="1"
                    CornerRadius="2" Background="{DynamicResource MainWindowBackgroundBrush}">
                            <DockPanel LastChildFill="true">
                                <Rectangle x:Name="PART_LEFT_BORDER" Width="2" Cursor="SizeWE">
                                    <Shape.Fill>
                                        <SolidColorBrush Color="Transparent"/>
                                    </Shape.Fill>
                                </Rectangle>
                                <Rectangle x:Name="PART_RIGHT_BORDER" Cursor="SizeWE" Width="2" DockPanel.Dock="Right">
                                    <Shape.Fill>
                                        <SolidColorBrush Color="Transparent"/>
                                    </Shape.Fill>
                                </Rectangle>
                                <Rectangle x:Name="PART_TOP_BORDER" Cursor="SizeNS" DockPanel.Dock="Top" Height="2">
                                    <Shape.Fill>
                                        <SolidColorBrush Color="Transparent"/>
                                    </Shape.Fill>
                                </Rectangle>
                                <Rectangle x:Name="PART_BOTTOM_BORDER" Cursor="SizeNS" Height="2" DockPanel.Dock="Bottom">
                                    <Shape.Fill>
                                        <SolidColorBrush Color="Transparent"/>
                                    </Shape.Fill>
                                </Rectangle>
                                <Border x:Name="PART_TITLEBAR" Margin="2,0,2,2" Height="40" DockPanel.Dock="Top" CornerRadius="2"
                        Background="Transparent">
                                    <DockPanel LastChildFill="false">
                                        <TextBlock Margin="8,0,0,4" VerticalAlignment="Center" FontStretch="UltraExpanded" Foreground="Black"
                               TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Text="{TemplateBinding Window.Title}"
                               FontSize="16"/>
                                        <Button x:Name="PART_CLOSE" DockPanel.Dock="Right" Style="{DynamicResource FlatButton}"
                            VerticalAlignment="Center" Margin="0,0,4,0">
                                            <Image Source="/Assets/Close.png" Stretch="None" Margin="4"/>
                                        </Button>
                                        <Button x:Name="PART_MAXIMIZE_RESTORE" DockPanel.Dock="Right" HorizontalAlignment="Center"
                            VerticalAlignment="Center" Style="{DynamicResource FlatButton}">
                                            <Image x:Name="MaximizeRestoreImage" Source="/Assets/Restore.png" Stretch="None" Margin="4"/>
                                        </Button>
                                        <Button x:Name="PART_MINIMIZE" HorizontalAlignment="Center" Style="{DynamicResource FlatButton}"
                            VerticalAlignment="Center" DockPanel.Dock="Right">
                                            <Image Margin="4" Source="/Assets/Minimize.png" Stretch="None"/>
                                        </Button>
                                    </DockPanel>
                                </Border>
                                <Border Height="1" DockPanel.Dock="Top" Background="{DynamicResource MainWindowTitleBarSeparator}"/>
                                <AdornerDecorator DockPanel.Dock="Bottom">
                                    <ContentPresenter/>
                                </AdornerDecorator>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="False" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Maximized}">
                            <Setter TargetName="MaximizeRestoreImage" Property="Image.Source" Value="/Assets/Maximize.png"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
